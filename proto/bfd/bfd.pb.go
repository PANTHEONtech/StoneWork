// SPDX-License-Identifier: Apache-2.0

// Copyright 2021 PANTHEON.tech
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bfd/bfd.proto

package bfd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BFDEvent_SessionState int32

const (
	BFDEvent_Unknown BFDEvent_SessionState = 0
	BFDEvent_Down    BFDEvent_SessionState = 1
	BFDEvent_Init    BFDEvent_SessionState = 2
	BFDEvent_Up      BFDEvent_SessionState = 3
)

// Enum value maps for BFDEvent_SessionState.
var (
	BFDEvent_SessionState_name = map[int32]string{
		0: "Unknown",
		1: "Down",
		2: "Init",
		3: "Up",
	}
	BFDEvent_SessionState_value = map[string]int32{
		"Unknown": 0,
		"Down":    1,
		"Init":    2,
		"Up":      3,
	}
)

func (x BFDEvent_SessionState) Enum() *BFDEvent_SessionState {
	p := new(BFDEvent_SessionState)
	*p = x
	return p
}

func (x BFDEvent_SessionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BFDEvent_SessionState) Descriptor() protoreflect.EnumDescriptor {
	return file_bfd_bfd_proto_enumTypes[0].Descriptor()
}

func (BFDEvent_SessionState) Type() protoreflect.EnumType {
	return &file_bfd_bfd_proto_enumTypes[0]
}

func (x BFDEvent_SessionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BFDEvent_SessionState.Descriptor instead.
func (BFDEvent_SessionState) EnumDescriptor() ([]byte, []int) {
	return file_bfd_bfd_proto_rawDescGZIP(), []int{1, 0}
}

// Single-hop UDP-based bidirectional forwarding detection session
type BFD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface the BFD session is attached to.
	Interface string `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	// Local IP address. The interface must have the same address configured.
	LocalIp string `protobuf:"bytes,2,opt,name=local_ip,json=localIp,proto3" json:"local_ip,omitempty"`
	// IP address of the peer, must be the same IP version as the local address.
	PeerIp string `protobuf:"bytes,3,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	// Desired minimum TX interval in milliseconds.
	MinTxInterval uint32 `protobuf:"varint,4,opt,name=min_tx_interval,json=minTxInterval,proto3" json:"min_tx_interval,omitempty"`
	// Required minimum RX interval in milliseconds.
	MinRxInterval uint32 `protobuf:"varint,5,opt,name=min_rx_interval,json=minRxInterval,proto3" json:"min_rx_interval,omitempty"`
	// Detect multiplier, must be non-zero value.
	DetectMultiplier uint32 `protobuf:"varint,6,opt,name=detect_multiplier,json=detectMultiplier,proto3" json:"detect_multiplier,omitempty"`
}

func (x *BFD) Reset() {
	*x = BFD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfd_bfd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BFD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BFD) ProtoMessage() {}

func (x *BFD) ProtoReflect() protoreflect.Message {
	mi := &file_bfd_bfd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BFD.ProtoReflect.Descriptor instead.
func (*BFD) Descriptor() ([]byte, []int) {
	return file_bfd_bfd_proto_rawDescGZIP(), []int{0}
}

func (x *BFD) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *BFD) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *BFD) GetPeerIp() string {
	if x != nil {
		return x.PeerIp
	}
	return ""
}

func (x *BFD) GetMinTxInterval() uint32 {
	if x != nil {
		return x.MinTxInterval
	}
	return 0
}

func (x *BFD) GetMinRxInterval() uint32 {
	if x != nil {
		return x.MinRxInterval
	}
	return 0
}

func (x *BFD) GetDetectMultiplier() uint32 {
	if x != nil {
		return x.DetectMultiplier
	}
	return 0
}

// BFDEvent is generated whenever a BFD state changes.
type BFDEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface    string                `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	LocalIp      string                `protobuf:"bytes,2,opt,name=local_ip,json=localIp,proto3" json:"local_ip,omitempty"`
	PeerIp       string                `protobuf:"bytes,3,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	SessionState BFDEvent_SessionState `protobuf:"varint,4,opt,name=session_state,json=sessionState,proto3,enum=bfd.BFDEvent_SessionState" json:"session_state,omitempty"`
}

func (x *BFDEvent) Reset() {
	*x = BFDEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfd_bfd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BFDEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BFDEvent) ProtoMessage() {}

func (x *BFDEvent) ProtoReflect() protoreflect.Message {
	mi := &file_bfd_bfd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BFDEvent.ProtoReflect.Descriptor instead.
func (*BFDEvent) Descriptor() ([]byte, []int) {
	return file_bfd_bfd_proto_rawDescGZIP(), []int{1}
}

func (x *BFDEvent) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *BFDEvent) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *BFDEvent) GetPeerIp() string {
	if x != nil {
		return x.PeerIp
	}
	return ""
}

func (x *BFDEvent) GetSessionState() BFDEvent_SessionState {
	if x != nil {
		return x.SessionState
	}
	return BFDEvent_Unknown
}

// Request message for the WatchBFDEvents method.
type WatchBFDEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionLabel string `protobuf:"bytes,1,opt,name=subscription_label,json=subscriptionLabel,proto3" json:"subscription_label,omitempty"`
}

func (x *WatchBFDEventsRequest) Reset() {
	*x = WatchBFDEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfd_bfd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBFDEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBFDEventsRequest) ProtoMessage() {}

func (x *WatchBFDEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bfd_bfd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBFDEventsRequest.ProtoReflect.Descriptor instead.
func (*WatchBFDEventsRequest) Descriptor() ([]byte, []int) {
	return file_bfd_bfd_proto_rawDescGZIP(), []int{2}
}

func (x *WatchBFDEventsRequest) GetSubscriptionLabel() string {
	if x != nil {
		return x.SubscriptionLabel
	}
	return ""
}

var File_bfd_bfd_proto protoreflect.FileDescriptor

var file_bfd_bfd_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x66, 0x64, 0x2f, 0x62, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x62, 0x66, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x03, 0x42, 0x46, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x70, 0x12, 0x26,
	0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x54, 0x78, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x78,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6d, 0x69, 0x6e, 0x52, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2b,
	0x0a, 0x11, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x08,
	0x42, 0x46, 0x44, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x66, 0x64, 0x2e, 0x42, 0x46, 0x44, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x0c, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x6f, 0x77, 0x6e,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02,
	0x55, 0x70, 0x10, 0x03, 0x22, 0x46, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x46, 0x44,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x32, 0x4d, 0x0a, 0x0a,
	0x42, 0x46, 0x44, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x42, 0x46, 0x44, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x62,
	0x66, 0x64, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x46, 0x44, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x62, 0x66, 0x64, 0x2e, 0x42,
	0x46, 0x44, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x2a, 0x5a, 0x28, 0x67,
	0x6f, 0x2e, 0x70, 0x61, 0x6e, 0x74, 0x68, 0x65, 0x6f, 0x6e, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x62, 0x66, 0x64, 0x3b, 0x62, 0x66, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bfd_bfd_proto_rawDescOnce sync.Once
	file_bfd_bfd_proto_rawDescData = file_bfd_bfd_proto_rawDesc
)

func file_bfd_bfd_proto_rawDescGZIP() []byte {
	file_bfd_bfd_proto_rawDescOnce.Do(func() {
		file_bfd_bfd_proto_rawDescData = protoimpl.X.CompressGZIP(file_bfd_bfd_proto_rawDescData)
	})
	return file_bfd_bfd_proto_rawDescData
}

var file_bfd_bfd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bfd_bfd_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bfd_bfd_proto_goTypes = []interface{}{
	(BFDEvent_SessionState)(0),    // 0: bfd.BFDEvent.SessionState
	(*BFD)(nil),                   // 1: bfd.BFD
	(*BFDEvent)(nil),              // 2: bfd.BFDEvent
	(*WatchBFDEventsRequest)(nil), // 3: bfd.WatchBFDEventsRequest
}
var file_bfd_bfd_proto_depIdxs = []int32{
	0, // 0: bfd.BFDEvent.session_state:type_name -> bfd.BFDEvent.SessionState
	3, // 1: bfd.BFDWatcher.WatchBFDEvents:input_type -> bfd.WatchBFDEventsRequest
	2, // 2: bfd.BFDWatcher.WatchBFDEvents:output_type -> bfd.BFDEvent
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_bfd_bfd_proto_init() }
func file_bfd_bfd_proto_init() {
	if File_bfd_bfd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bfd_bfd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BFD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfd_bfd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BFDEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfd_bfd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBFDEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bfd_bfd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bfd_bfd_proto_goTypes,
		DependencyIndexes: file_bfd_bfd_proto_depIdxs,
		EnumInfos:         file_bfd_bfd_proto_enumTypes,
		MessageInfos:      file_bfd_bfd_proto_msgTypes,
	}.Build()
	File_bfd_bfd_proto = out.File
	file_bfd_bfd_proto_rawDesc = nil
	file_bfd_bfd_proto_goTypes = nil
	file_bfd_bfd_proto_depIdxs = nil
}
