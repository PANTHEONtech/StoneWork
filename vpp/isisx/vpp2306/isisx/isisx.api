/*
 * isisx.api - binary API skeleton
 *
 * Copyright (c) 2022 PANTHEON.tech s.r.o.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @file isisx.api
 * @brief VPP control-plane API messages.
 *
 * This file defines VPP control-plane binary API messages which are generally
 * called through a shared memory interface.
 */

/* Version and type recitations */

option version = "0.1.0";
import "vnet/interface_types.api";

define isisx_plugin_get_version
{
   u32 client_index;
   u32 context;
};

/** \brief Reply to get the plugin version
    @param context - returned sender context, to match reply w/ request
    @param major - Incremented every time a known breaking behavior change is introduced
    @param minor - Incremented with small changes, may be used to avoid buggy versions
*/
define isisx_plugin_get_version_reply
{
   u32 context;
   u32 major;
   u32 minor;
};
/** \brief A description of an ISISx connection
    @param rx_sw_if_index Rx interface index to be used for matching
    @param tx_sw_if_index Tx interface index to be used for forwarding
 */
typedef isisx_connection
{
  u32 rx_sw_if_index;
  u32 tx_sw_if_index;
};

/** \brief A description of an ISISx connection
    @param is_add Is this the addition or removal of paths from the connect
           If the connect does not exist it is created. If the last path
           Is being removed, the connect is deleted
    @param connection The ISISx connection
 */
autoreply define isisx_connection_add_del
{
    u32 client_index;
    u32 context;
    u8 is_add;
    vl_api_isisx_connection_t connection;
};

/** \brief Dump ISISx connections response
    @param policy - the ABX policy
*/
define isisx_connection_details {
  u32 context;
  vl_api_isisx_connection_t connection;
};

/** \brief Dump ISISx connections
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
*/
define isisx_connection_dump {
  u32 client_index;
  u32 context;
};